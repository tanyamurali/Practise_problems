class Solution {
public:
    int searchFirst(vector<int> nums, int target) {
        int start=0, end=nums.size()-1;
        int ans=-1;
        
        while(start<=end) {
            int mid= (start+end)/2;
            if(nums[mid]==target) {
                ans=mid;
                end=mid-1;
            } else if(nums[mid]>target) {
                end=mid-1;
            } else {
                start=mid+1;
            }
        }
        return ans;
    }
    
    int searchLast(vector<int> nums, int target) {
       int start=0, end=nums.size()-1;
        int ans=-1;
        
        while(start<=end) {
            int mid= (start+end)/2;
            if(nums[mid]==target) {
                ans=mid;
                start=mid+1;
            } else if(nums[mid]>target) {
                end=mid-1;
            } else {
                start=mid+1;
            }
        }
        return ans;
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        ans.push_back(searchFirst(nums,target));
        ans.push_back(searchLast(nums, target));
        
        return ans;
    }
};
