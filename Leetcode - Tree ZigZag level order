/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    queue<TreeNode*> q;
    vector<vector<int>> res;
    vector<int> level_res;
    TreeNode*dummy=new TreeNode(-200);
    
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
     
        if(!root) return res;
        int lev=0;
        q.push(root);
        q.push(dummy);
        
        while(q.size()>0)
        {
            TreeNode* P=q.front();
            if(P->val!=-200)
            {
                level_res.push_back(P->val);
                
                if(P->left)
                {
                    q.push(P->left);
                }
                if(P->right)
                {
                    q.push(P->right);
                }
            }
            else
            {
                if(q.size()==1)
                    q.pop();
                if(lev%2==1)
                {
                    reverse(level_res.begin(), level_res.end());
                }
                q.push(dummy);
                lev++;
                res.push_back(level_res);
                level_res.clear();
            }
            q.pop();
        }
        return res;
    }
};
