class Solution {
public:
    
    long int range_low= numeric_limits<int>::min();
    long int range_high= numeric_limits<int>::max();
    int myAtoi(string s) {
        if(s=="")return 0;
        int flag=0;
        int sign=1 ; // 0-> neg, 1 -> pos
        long int val=0;
        for(int i=0;i<s.length();i++)
        {
            if(s[i]==' ')
            {
                if(flag==0)continue;
                else break;
            }
            else if(s[i]=='-')
            {
                if(flag==0)sign = 0;
                else break;
                flag=1;
            }
            else if(s[i]=='+')
            {
                if(flag==0)sign = 1;
                else break;  
                flag=1;
            }
            else if(!isdigit(s[i])) break;
            else if(isdigit(s[i])){
                flag=1;
                // number
                val=val*10+ s[i]-48;
                if(val>range_high){
                    if(sign == 1) return range_high;
                    else if(val>range_high+1) return range_low;
                }
            }
        }
        if(sign ==0) return 0-val;
        return val;
    }
};
