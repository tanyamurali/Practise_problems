/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* dummy = new TreeNode(-1002);
    queue <TreeNode*> Q;
    vector<vector<int>> V_res;
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        if(!root) return V_res;
        
        Q.push(root);
        Q.push(dummy);
        
        vector<int> V;
        int lev=0, m=0;
        while(Q.size()>0)
        {
            TreeNode* P = Q.front();
            int v1= P->val;
            if(P->val!=-1002)
            {
                V.push_back(v1);
                if(P->left!=nullptr)
                {
                    Q.push(P->left);
                }
                if(P->right!=nullptr)
                {
                    Q.push(P->right);
                }
            }
            else
            {
                if(Q.size()!=1)
                    Q.push(P);
                V_res.push_back(V);
                V.clear();
            }    
            Q.pop();
        }
        return V_res;
    }
};
