class Solution {
public:
    
    bool wordBreakRecur(string& s, set<string>& dict_set, int start, vector<int>& memo)
    {
        if(start==s.length()) return true;
        
        if(memo[start]!=-1) return memo[start];
        
        for(int end=start+1; end<=s.length();end++)
        {
            if((dict_set.find(s.substr(start,end-start))!=dict_set.end()) and wordBreakRecur(s,dict_set,end,memo)){
                return memo[start]= true;
            }
        }
        return memo[start]=false;
    }
    bool wordBreak(string s, vector<string>& wordDict) {
        set<string> dict_set(wordDict.begin(), wordDict.end());
        vector<int> memo(s.length(),-1);
        return wordBreakRecur(s,dict_set,0, memo);
    }
}; 
