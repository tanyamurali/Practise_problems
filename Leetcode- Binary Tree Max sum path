/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int max_sum=numeric_limits<int>::min();
    int max_gain(TreeNode* root)
    {
        if(!root) return 0; 
        
        int max_gain_1, left_gain, right_gain; 
        
        left_gain= max(max_gain(root->left),0);
        right_gain=max(max_gain(root->right),0);
        
        max_gain_1 = max(left_gain, right_gain)+root->val;
        
        int price_newPath = root->val+left_gain+right_gain;
        
        max_sum =max(max_sum, price_newPath);
        
        return max_gain_1;
        
    }
    int maxPathSum(TreeNode* root) {
        max_gain(root);
        return max_sum;
    }
};
