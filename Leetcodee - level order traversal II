/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        queue<TreeNode*> q;
        vector<vector<int>> ans;
        vector<int> v;
        
        if(!root) return ans;
        q.push(root);
        q.push(NULL); // delimiter for each level
        
        while(!q.empty() ) {
            TreeNode* t=q.front();
            q.pop();
            
            if(t==NULL) {
                ans.push_back(v);
                v.clear();
                if(!q.empty()) {
                    q.push(NULL);
                }
            } else {
                v.push_back(t->val);
                if(t->left) {
                    q.push(t->left);
                }
                if(t->right) {
                    q.push(t->right);
                }
            }
        }
        if(!v.empty()) {
            ans.push_back(v);
        }
        
        reverse(ans.begin(), ans.end());
        return ans;
        
    }
};
